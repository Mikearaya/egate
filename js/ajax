$.ajax({
  url: "test.html",
  
  contentType (default: 'application/x-www-form-urlencoded; charset=UTF-8')
  contents
  accepts (default: depends on DataType)
  
 
  cache (default: true, false for dataType 'script' and 'jsonp'

  converters (default: {"* text": window.String, "text html": true, "text json": jQuery.parseJSON, "text xml": jQuery.parseXML})
  crossDomain (default: false for same-domain requests, true for cross-domain requests)data
dataFilter  Type: Function( String data, String type ) => Anything
context: document.body     
dataType (default: Intelligent Guess (xml, json, script, or html))
error Type: Function( jqXHR jqXHR, String textStatus, String errorThrown )
null) are "timeout", "error", "abort", and "parsererror". When an HTTP error occurs, errorThrown

async (default: true     
 beforeSend     
  complete     


   global (default: true)
Type: Boolean
headers (default: {})
Type: PlainObject
ifModified (default: false)
Type: Boolean
isLocal (default: depends on current location protocol)
Type: Boolean
jsonp
Type: String or Boolean
jsonpCallback
Type: String or Function()
method (default: 'GET')
Type: String
mimeType
Type: String
password
Type: String
processData (default: true)
Type: Boolean
scriptCharset
Type: String
statusCode (default: {})
Type: PlainObject 
success
Type: Function( Anything data, String textStatus, jqXHR jqXHR )
timeout
Type: Number
traditional
Type: Boolean
type (default: 'GET')
Type: String
url (default: The current page)
Type: String
username
Type: String
xhr (default: ActiveXObject when available (IE), the XMLHttpRequest otherwise)
Type: Function()
xhrFie
lds
Type: PlainObject 

  }).done(function() {
  $( this ).addClass( "done" );
});


$.ajax({
  url: "http://fiddle.jshell.net/favicon.png",
  beforeSend: function( xhr ) {
    xhr.overrideMimeType( "text/plain; charset=x-user-defined" );
  }
})
  .done(function( data ) {
    if ( console && console.log ) {
      console.log( "Sample of data:", data.slice( 0, 100 ) );
    }
  });



  jqXHR.done(function( data, textStatus, jqXHR ) {});j
  qXHR.fail(function( jqXHR, textStatus, errorThrown ) {});
  jqXHR.always(function( data|jqXHR, textStatus, jqXHR|errorThrown ) { }); 
  (added in jQuery 1.6) 
  jqXHR.then(function( data, textStatus, jqXHR ) {}, function( jqXHR, textStatus, errorThrown ) {});